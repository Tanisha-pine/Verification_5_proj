#include<iostream>
using namespace std;

int COUNT=0, FRONT=-1, REAR=-1;

int PUSHOVR(int n)      //Checking overflow
{
    if(FRONT == -1)
        ++REAR;
    if(FRONT < (n-1))
        return 1;
    else
    {
        cout << "Array is full" << endl;
        return 0;
    }
}

void PUSH(uint32_t arr[], int n)       //Push operation
{
    uint32_t DATAPUSH;
    if(PUSHOVR(n))
    {
        cout << "Enter the value to be pushed" << endl;
        cin >> DATAPUSH;
        ++FRONT;
        arr[FRONT] = DATAPUSH;
        ++COUNT;
    }
}

int POPUND()
{
    if((REAR == -1) || (REAR > FRONT))
    {
        cout << "Array is Empty" << endl;
        return 0;
    }
    else
        return 1;
}

uint32_t POP(uint32_t arr[])
{
    uint32_t DATAPOP;
    if(POPUND())
    {
        DATAPOP = arr[REAR];
        ++REAR;
        return DATAPOP;
    }
    else
        return -1;
}

void display(uint32_t arr[])
{
    for(int i=REAR;i<=FRONT;i++)
    {
        cout << arr[i] << " " << endl;
    }
}

int main(void)
{
    uint32_t config, arr[10];
    int choice;
    cout << "Enter the configuration of FIFO" << endl;
    cin >> config;
    cout << "\tMenu:\n1)PUSH\n2)POP\n3)Change Configuration of FIFO operations\n4)Exit\n5)Display" << endl;
    while(1)
    {
        cout << "Enter your choice" << endl;
        cin >> choice;
        switch(choice)
        {
            case 1: cout << "You have chosen the push operation" << endl;
                    if(1 & config)                                                  //Checking if FIFO operations are enabled
                    {
                        if((1<<3) & config)                                         //Checking if PUSH operation is enabled
                        {
                            PUSH(arr,10);
                        }
                        else
                            cout << "Push is not enabled" << endl;
                    }
                    else
                        cout << "FIFO is not enabled" << endl;
                    break;
            case 2: cout << "You have chosen the pop operation" << endl;
                    if(1 & config)
                    {
                        if((1<<2) & config)
                        {
                            uint32_t DATAPOP = POP(arr);
                            if(DATAPOP == -1)
                                cout << "No value to show" << endl;
                            else
                                cout << "Popped value is = " << DATAPOP << endl;
                        }
                        else
                            cout << "Pop is not enabled" << endl;
                    }
                    else
                        cout << "FIFO is not enabled" << endl;
                    break;
            case 3: cout << "Please enter the new configuration for FIFO operations" << endl;
                    cin >> config;
                    break;
            case 4: exit(1);
                    break;
            case 5: cout << "\nDisplaying..." << endl;
                    display(arr);
                    break;
            default: cout << "Wrong choice" << endl;
                     break;
        }
    }
}

